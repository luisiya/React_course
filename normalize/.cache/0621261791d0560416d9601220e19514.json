{"dependencies":[{"name":"C:\\Users\\user\\Desktop\\React_homework\\normalize\\node_modules\\normalizr\\package.json","includedInParent":true,"mtime":1529665477077},{"name":"C:\\Users\\user\\Desktop\\React_homework\\normalize\\package.json","includedInParent":true,"mtime":1529665478322},{"name":"./ImmutableUtils","loc":{"line":9,"column":30},"parent":"C:\\Users\\user\\Desktop\\React_homework\\normalize\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","resolved":"C:\\Users\\user\\Desktop\\React_homework\\normalize\\node_modules\\normalizr\\dist\\src\\schemas\\ImmutableUtils.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _ImmutableUtils = require('./ImmutableUtils');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar PolymorphicSchema = function () {\n  function PolymorphicSchema(definition, schemaAttribute) {\n    _classCallCheck(this, PolymorphicSchema);\n\n    if (schemaAttribute) {\n      this._schemaAttribute = typeof schemaAttribute === 'string' ? function (input) {\n        return input[schemaAttribute];\n      } : schemaAttribute;\n    }\n    this.define(definition);\n  }\n\n  _createClass(PolymorphicSchema, [{\n    key: 'define',\n    value: function define(definition) {\n      this.schema = definition;\n    }\n  }, {\n    key: 'getSchemaAttribute',\n    value: function getSchemaAttribute(input, parent, key) {\n      return !this.isSingleSchema && this._schemaAttribute(input, parent, key);\n    }\n  }, {\n    key: 'inferSchema',\n    value: function inferSchema(input, parent, key) {\n      if (this.isSingleSchema) {\n        return this.schema;\n      }\n\n      var attr = this.getSchemaAttribute(input, parent, key);\n      return this.schema[attr];\n    }\n  }, {\n    key: 'normalizeValue',\n    value: function normalizeValue(value, parent, key, visit, addEntity) {\n      var schema = this.inferSchema(value, parent, key);\n      if (!schema) {\n        return value;\n      }\n      var normalizedValue = visit(value, parent, key, schema, addEntity);\n      return this.isSingleSchema || normalizedValue === undefined || normalizedValue === null ? normalizedValue : { id: normalizedValue, schema: this.getSchemaAttribute(value, parent, key) };\n    }\n  }, {\n    key: 'denormalizeValue',\n    value: function denormalizeValue(value, unvisit) {\n      var schemaKey = (0, _ImmutableUtils.isImmutable)(value) ? value.get('schema') : value.schema;\n      if (!this.isSingleSchema && !schemaKey) {\n        return value;\n      }\n      var id = (0, _ImmutableUtils.isImmutable)(value) ? value.get('id') : value.id;\n      var schema = this.isSingleSchema ? this.schema : this.schema[schemaKey];\n      return unvisit(id || value, schema);\n    }\n  }, {\n    key: 'isSingleSchema',\n    get: function get() {\n      return !this._schemaAttribute;\n    }\n  }]);\n\n  return PolymorphicSchema;\n}();\n\nexports.default = PolymorphicSchema;","map":{"mappings":[{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}}],"sources":{"..\\node_modules\\normalizr\\dist\\src\\schemas\\Polymorphic.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _ImmutableUtils = require('./ImmutableUtils');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar PolymorphicSchema = function () {\n  function PolymorphicSchema(definition, schemaAttribute) {\n    _classCallCheck(this, PolymorphicSchema);\n\n    if (schemaAttribute) {\n      this._schemaAttribute = typeof schemaAttribute === 'string' ? function (input) {\n        return input[schemaAttribute];\n      } : schemaAttribute;\n    }\n    this.define(definition);\n  }\n\n  _createClass(PolymorphicSchema, [{\n    key: 'define',\n    value: function define(definition) {\n      this.schema = definition;\n    }\n  }, {\n    key: 'getSchemaAttribute',\n    value: function getSchemaAttribute(input, parent, key) {\n      return !this.isSingleSchema && this._schemaAttribute(input, parent, key);\n    }\n  }, {\n    key: 'inferSchema',\n    value: function inferSchema(input, parent, key) {\n      if (this.isSingleSchema) {\n        return this.schema;\n      }\n\n      var attr = this.getSchemaAttribute(input, parent, key);\n      return this.schema[attr];\n    }\n  }, {\n    key: 'normalizeValue',\n    value: function normalizeValue(value, parent, key, visit, addEntity) {\n      var schema = this.inferSchema(value, parent, key);\n      if (!schema) {\n        return value;\n      }\n      var normalizedValue = visit(value, parent, key, schema, addEntity);\n      return this.isSingleSchema || normalizedValue === undefined || normalizedValue === null ? normalizedValue : { id: normalizedValue, schema: this.getSchemaAttribute(value, parent, key) };\n    }\n  }, {\n    key: 'denormalizeValue',\n    value: function denormalizeValue(value, unvisit) {\n      var schemaKey = (0, _ImmutableUtils.isImmutable)(value) ? value.get('schema') : value.schema;\n      if (!this.isSingleSchema && !schemaKey) {\n        return value;\n      }\n      var id = (0, _ImmutableUtils.isImmutable)(value) ? value.get('id') : value.id;\n      var schema = this.isSingleSchema ? this.schema : this.schema[schemaKey];\n      return unvisit(id || value, schema);\n    }\n  }, {\n    key: 'isSingleSchema',\n    get: function get() {\n      return !this._schemaAttribute;\n    }\n  }]);\n\n  return PolymorphicSchema;\n}();\n\nexports.default = PolymorphicSchema;"},"lineCount":76}},"hash":"8be6ef85bbefa1f032301f91e3b33ed6","cacheData":{"env":{}},"id":15}